/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetoswing2019;

import JDBC.ConectionFactory;
import java.awt.Color;
import java.sql.Connection;
import javax.swing.JOptionPane;

/**
 *
 * @author C.Tiago
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        this.setExtendedState(MAXIMIZED_BOTH);
        this.getContentPane().setBackground(Color.gray);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        menuCadastro = new javax.swing.JMenu();
        itemMenuCidade = new javax.swing.JMenuItem();
        itemMenuAluno = new javax.swing.JMenuItem();
        itemMenuDisciplina = new javax.swing.JMenuItem();
        itemMenuProfessor = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        itemMenuSair = new javax.swing.JMenuItem();
        menuPesquisa = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tela Principal");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        menuCadastro.setText("Cadastro");

        itemMenuCidade.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        itemMenuCidade.setMnemonic('c');
        itemMenuCidade.setText("Cidade");
        itemMenuCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenuCidadeActionPerformed(evt);
            }
        });
        menuCadastro.add(itemMenuCidade);

        itemMenuAluno.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
        itemMenuAluno.setMnemonic('a');
        itemMenuAluno.setText("Aluno");
        itemMenuAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenuAlunoActionPerformed(evt);
            }
        });
        menuCadastro.add(itemMenuAluno);

        itemMenuDisciplina.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_MASK));
        itemMenuDisciplina.setMnemonic('d');
        itemMenuDisciplina.setText("Disciplina");
        itemMenuDisciplina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenuDisciplinaActionPerformed(evt);
            }
        });
        menuCadastro.add(itemMenuDisciplina);

        itemMenuProfessor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
        itemMenuProfessor.setMnemonic('p');
        itemMenuProfessor.setText("Professor");
        itemMenuProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenuProfessorActionPerformed(evt);
            }
        });
        menuCadastro.add(itemMenuProfessor);
        menuCadastro.add(jSeparator1);

        itemMenuSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        itemMenuSair.setText("Sair");
        itemMenuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenuSairActionPerformed(evt);
            }
        });
        menuCadastro.add(itemMenuSair);

        jMenuBar1.add(menuCadastro);

        menuPesquisa.setText("Pesquisa");
        jMenuBar1.add(menuPesquisa);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(416, 339));
    }// </editor-fold>//GEN-END:initComponents

    private void itemMenuCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenuCidadeActionPerformed
        
        new Cidade(null, true).setVisible(true);
    }//GEN-LAST:event_itemMenuCidadeActionPerformed

    private void itemMenuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenuSairActionPerformed
        int status = JOptionPane.showConfirmDialog(null, "Deseja mesmo sair da aplicação?", "Fechar", JOptionPane.YES_NO_OPTION);
        if(status == JOptionPane.YES_OPTION)
            System.exit(0);
    }//GEN-LAST:event_itemMenuSairActionPerformed

    private void itemMenuAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenuAlunoActionPerformed

        new Aluno(null, true).setVisible(true);
    }//GEN-LAST:event_itemMenuAlunoActionPerformed

    private void itemMenuDisciplinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenuDisciplinaActionPerformed

        new Disciplina(null, true).setVisible(true);
    }//GEN-LAST:event_itemMenuDisciplinaActionPerformed

    private void itemMenuProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenuProfessorActionPerformed

        new Professor(null, true).setVisible(true);
    }//GEN-LAST:event_itemMenuProfessorActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        //testaConeccao();
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem itemMenuAluno;
    private javax.swing.JMenuItem itemMenuCidade;
    private javax.swing.JMenuItem itemMenuDisciplina;
    private javax.swing.JMenuItem itemMenuProfessor;
    private javax.swing.JMenuItem itemMenuSair;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenu menuCadastro;
    private javax.swing.JMenu menuPesquisa;
    // End of variables declaration//GEN-END:variables

    public void testaConeccao(){
        try{
            JOptionPane.showMessageDialog(null, "Testando a conexao.");
            Connection con = new ConectionFactory().conecta();
             JOptionPane.showMessageDialog(null, "Conexao realizada com sucesso.");
        }catch (Exception e){
          JOptionPane.showMessageDialog(null, "Erro: " + e);   
    }
    }
}
